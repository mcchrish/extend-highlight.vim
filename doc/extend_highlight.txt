*extend-highlight.vim* extend existing/replace highlight group
*extend-highlight*

=============================================================================
Usage                                                  *extend-highlight-usage*
extend_highlight#extend({from}, {to}, {override})     *extend_highlight#extend*
>
  " ALEVirtualTextError will copy the highlights of Function then
  " replaces/add 'gui' configuration
  :call extend_highlight#extend('Function', 
      \ 'ALEVirtualTextError', { 'gui': ['italic'] })

  " Adding a + will append/add existing highlights instead of replace
  :call extend_highlight#extend('TypeDef',
      \ 'ALEVirtualTextWarning', { '+gui': ['italic'] })
<

                                               *g:extend_highlight#extend_list*

An autocommand for |VimEnter| and |ColorScheme| will be registered and calls
|extend_highlight#extend| for each item in this list. You can turn it off by
setting *g:extend_highlight#register_autocmd* to 0.
>
  let g:extend_highlight#extend_list = [
        \ ['Function', 'ALEVirtualTextError', { 'gui': ['italic'] }],
        \ ['TypeDef', 'ALEVirtualTextWarning', { 'gui': ['italic'] }],
        \ ['ErrorMsg', 'ALEError', { '+gui': ['italic'] }],
        \ ['ErrorMsg', 'ALEWarning', { '+gui': ['italic'] }]
        \ ]
<
=============================================================================
vim:tw=78:ts=2:et:ft=help:norl:
